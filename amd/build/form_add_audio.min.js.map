{"version":3,"file":"form_add_audio.min.js","sources":["../src/form_add_audio.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * Modal Form add directon\n * @package    local_coodle\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\n\n\n/**\n * Defines REGIONS\n */\nconst REGIONS = {\n    MSG: '[data-region=\"coodle-msg-buttons\"]',\n};\n\n/**\n * Defines dataset Actions\n */\nconst ACTIONS = {\n    ADD_AUDIO: 'local-coodle-send-audio',\n};\n\nvar title;\n\n/**\n * Gets called from mustache template.\n *\n */\nexport const init = () => {\n    document.querySelector(REGIONS.MSG).addEventListener('click', function(e) {\n        let target = e.target;\n        if (!target.closest('button')) {\n            return;\n        }\n        switch (target.closest('button').dataset.action) {\n            case ACTIONS.ADD_AUDIO:\n                e.stopPropagation();\n                title = getString('add_audio', 'local_coodle');\n                openForm(e);\n                break;\n            default:\n                break;\n        }\n    });\n};\n\n/**\n * Opens the Modal to edit questions.\n * @param {*} event the click event\n */\n const openForm = event => {\n\n    let button = event.target.closest('button');\n\n    const modalForm = new ModalForm({\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_coodle\\\\form\\\\add_audio_recording\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            'clientid': button.dataset.clientid,\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: title},\n\n        saveButtonText: getString('add_direction', 'local_coodle'),\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n        // eslint-disable-next-line no-console\n        console.log('Response of the modal: ', response);\n    });\n\n    // Show the form.\n    modalForm.show().then(() => {\n\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n};\n"],"names":["REGIONS","ACTIONS","title","document","querySelector","addEventListener","e","target","closest","dataset","action","stopPropagation","openForm","event","button","modalForm","ModalForm","formClass","args","clientid","modalConfig","saveButtonText","returnFocus","events","FORM_SUBMITTED","response","detail","console","log","show","then","catch"],"mappings":";;;;;;sJA8BMA,YACG,qCAMHC,kBACS,8BAGXC,oBAMgB,KAChBC,SAASC,cAAcJ,aAAaK,iBAAiB,SAAS,SAASC,OAC/DC,OAASD,EAAEC,UACVA,OAAOC,QAAQ,WAGZD,OAAOC,QAAQ,UAAUC,QAAQC,SAChCT,kBACDK,EAAEK,kBACFT,OAAQ,mBAAU,YAAa,gBAC/BU,SAASN,aAYlBM,SAAWC,YAEVC,OAASD,MAAMN,OAAOC,QAAQ,gBAE5BO,UAAY,IAAIC,mBAAU,CAE5BC,UAAW,0CAEXC,KAAM,UACUJ,OAAOL,QAAQU,UAG/BC,YAAa,CAAClB,MAAOA,OAErBmB,gBAAgB,mBAAU,gBAAiB,gBAE3CC,YAAaR,SAMjBC,UAAUV,iBAAiBU,UAAUQ,OAAOC,gBAAiBlB,UACnDmB,SAAWnB,EAAEoB,OAEnBC,QAAQC,IAAI,0BAA2BH,aAI3CV,UAAUc,OAAOC,MAAK,SAGnBC,OAAMzB,IAELqB,QAAQC,IAAItB"}