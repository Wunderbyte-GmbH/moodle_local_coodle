{"version":3,"file":"form_add_calendarentry.min.js","sources":["../src/form_add_calendarentry.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * Modal Form add directon\n * @package    local_coodle\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\n\n/**\n * Defines REGIONS\n */\nconst REGIONS = {\n    MSG: '[data-region=\"coodle-dates\"]',\n};\n\n/**\n * Defines dataset Actions\n */\nconst ACTIONS = {\n    ADD: 'local-coodle-add-date',\n};\n\nvar title;\n\n/**\n * Gets called from mustache template.\n *  @param {*} userid\n */\nexport const init = (userid) => {\n    const clientid = userid;\n    document.querySelector(REGIONS.MSG).addEventListener('click', function(e) {\n        let target = e.target;\n        if (!target.closest('button')) {\n            return;\n        }\n        switch (target.closest('button').dataset.action) {\n            case ACTIONS.ADD:\n                e.stopPropagation();\n                title = getString('add_calendar_entry', 'local_coodle');\n                openForm(e, clientid);\n                break;\n            default:\n                break;\n        }\n    });\n};\n\n/**\n * Opens the Modal to edit questions.\n * @param {*} event the click event\n * @param {*} userid\n */\n const openForm = (event, userid) => {\n\n    let button = event.target.closest('button');\n\n    const modalForm = new ModalForm({\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: \"local_coodle\\\\form\\\\add_calendar_form\",\n        // Add as many arguments as you need, they will be passed to the form:\n        args: {\n            'clientid': userid,\n        },\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: title},\n\n        saveButtonText: getString('add_calendar_entry', 'local_coodle'),\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button\n    });\n\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n\n        if (response.error == true) {\n            Notification.alert(getString('add_calendar_entry_notification', 'local_coodle'), getString('add_calendar_entry_error', 'local_coodle'));\n            } else {\n            Notification.alert(getString('add_calendar_entry_notification', 'local_coodle'), getString('add_calendar_entry_added', 'local_coodle'));\n            window.location.reload();\n        }\n        // eslint-disable-next-line no-console\n        console.log('Response of the modal: ', response);\n    });\n\n    // Show the form.\n    modalForm.show().then(() => {\n\n        return;\n    }).catch(e => {\n        // eslint-disable-next-line no-console\n        console.log(e);\n    });\n};\n"],"names":["REGIONS","ACTIONS","title","userid","clientid","document","querySelector","addEventListener","e","target","closest","dataset","action","stopPropagation","openForm","event","button","modalForm","ModalForm","formClass","args","modalConfig","saveButtonText","returnFocus","events","FORM_SUBMITTED","response","detail","error","alert","window","location","reload","console","log","show","then","catch"],"mappings":";;;;;;0LA8BMA,YACG,+BAMHC,YACG,4BAGLC,oBAMiBC,eACXC,SAAWD,OACjBE,SAASC,cAAcN,aAAaO,iBAAiB,SAAS,SAASC,OAC/DC,OAASD,EAAEC,UACVA,OAAOC,QAAQ,WAGZD,OAAOC,QAAQ,UAAUC,QAAQC,SAChCX,YACDO,EAAEK,kBACFX,OAAQ,mBAAU,qBAAsB,gBACxCY,SAASN,EAAGJ,oBAarBU,SAAW,CAACC,MAAOZ,cAElBa,OAASD,MAAMN,OAAOC,QAAQ,gBAE5BO,UAAY,IAAIC,mBAAU,CAE5BC,UAAW,wCAEXC,KAAM,UACUjB,QAGhBkB,YAAa,CAACnB,MAAOA,OAErBoB,gBAAgB,mBAAU,qBAAsB,gBAEhDC,YAAaP,SAMjBC,UAAUV,iBAAiBU,UAAUO,OAAOC,gBAAiBjB,UACnDkB,SAAWlB,EAAEmB,OAEG,GAAlBD,SAASE,4BACIC,OAAM,mBAAU,kCAAmC,iBAAiB,mBAAU,2BAA4B,wCAE1GA,OAAM,mBAAU,kCAAmC,iBAAiB,mBAAU,2BAA4B,iBACvHC,OAAOC,SAASC,UAGpBC,QAAQC,IAAI,0BAA2BR,aAI3CT,UAAUkB,OAAOC,MAAK,SAGnBC,OAAM7B,IAELyB,QAAQC,IAAI1B"}