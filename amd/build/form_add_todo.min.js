define("local_coodle/form_add_todo",["exports","core_form/modalform","core/str"],(function(_exports,_modalform,_str){var obj;
/*
   * Modal Form user create
   * @package    local_coodle
   * @copyright  Wunderbyte GmbH <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modalform=(obj=_modalform)&&obj.__esModule?obj:{default:obj};const SELECTORS_TODO=".coodle-dashboard",ACTIONS_ADD_TODO="local-coodle-add-todo";_exports.init=()=>{document.querySelector(SELECTORS_TODO).addEventListener("click",(function(e){let target=e.target;if(target.dataset.action&&target.dataset.action===ACTIONS_ADD_TODO)openForm(e)}))};const openForm=event=>{let button=event.target;const modalForm=new _modalform.default({formClass:"local_coodle\\form\\add_todo_form",args:{clientid:button.dataset.clientid},modalConfig:{title:(0,_str.get_string)("add_todo","local_coodle")},saveButtonText:(0,_str.get_string)("add_todo","local_coodle"),returnFocus:button});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(e=>{const response=e.detail;console.log("Response of the modal: ",response),window.location.reload()})),modalForm.show().then((()=>{})).catch((e=>{console.log(e)}))}}));

//# sourceMappingURL=form_add_todo.min.js.map