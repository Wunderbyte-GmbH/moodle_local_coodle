{"version":3,"file":"actions_link.min.js","sources":["../src/actions_link.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * Coodle todo Event functions\n * @package    local_coodle\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\n\n/**\n * Defines dataset Actions\n */\nconst ACTIONS = {\n    CHECK: 'local-coodle-todo-check',\n    DELETE: 'local-coodle-delete-link',\n    UNCHECK: 'local-coodle-todo-uncheck',\n    COLLAPSE: 'local-coodle-todo-collapse',\n    MAKEUSERTODO: 'local-coodle-todo-usertodo',\n};\n\n/**\n * Defines Selectors\n */\nconst SELECTORS = {\n    DASHBOARD: '.coodle-dashboard',\n};\n\n/**\n * Initialize function\n */\nexport const init = () => {\n    initEventListener();\n};\n\n/**\n * Initialize function\n */\nconst initEventListener = () => {\n    document.querySelector(SELECTORS.DASHBOARD).addEventListener('click', function(e) {\n        let target = e.target;\n        // eslint-disable-next-line no-console\n        console.log(target.dataset.action);\n        if (!target.dataset.action) {\n            // eslint-disable-next-line no-console\n            console.log('nix');\n            return;\n        }\n        switch (target.dataset.action) {\n            case ACTIONS.CHECK:\n                todoCheck(target, target.dataset.id);\n                break;\n            case ACTIONS.DELETE:\n                linkDelete(target, target.dataset.id);\n                break;\n            case ACTIONS.UNCHECK:\n                todoUncheck(target, target.dataset.id);\n                break;\n            case ACTIONS.COLLAPSE:\n                todoCollapse(target, target.dataset.id);\n                break;\n            case ACTIONS.MAKEUSERTODO:\n                todoMakeUserTodo(target, target.dataset.id);\n                break;\n            default:\n                break;\n        }\n    });\n};\n\n/**\n * Marks the todo as completed\n * @param {EventTarget} target the id of the todo\n * @param {Integer} id the id of the todo\n */\nconst todoCheck = (target, id) => {\n    Ajax.call([{\n        methodname: \"local_coodle_change_todo\",\n        args: {\n            'todoid': parseInt(id),\n            'method': 'done',\n        },\n        done: function() {\n            target.closest('li').classList.add('done');\n            switchbuttons(target, 'check', id);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * Deletes todo\n * @param {EventTarget} target the id of the todo\n * @param {Integer} id the id of the todo\n */\nconst linkDelete = (target, id) => {\n    Ajax.call([{\n        methodname: \"local_coodle_delete_link\",\n        args: {\n            'id': parseInt(id),\n        },\n        done: function() {\n            target.closest('li').remove();\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * Deletes todo\n * @param {EventTarget} target the id of the todo\n * @param {Integer} id the id of the todo\n */\nconst todoMakeUserTodo = (target, id) => {\n    Ajax.call([{\n        methodname: \"local_coodle_change_todo\",\n        args: {\n            'todoid': parseInt(id),\n            'method': 'usertodo',\n        },\n        done: function() {\n            target.closest('li').classList.add('usertodo');\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * Deletes todo\n * @param {EventTarget} target the id of the todo\n * @param {Integer} id the id of the todo\n */\nconst todoUncheck = (target, id) => {\n    Ajax.call([{\n        methodname: \"local_coodle_change_todo\",\n        args: {\n            'todoid': parseInt(id),\n            'method': 'uncheck',\n        },\n        done: function() {\n            target.closest('li').classList.remove('done');\n            switchbuttons(target, 'uncheck', id);\n        },\n        fail: function(ex) {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n\n/**\n * Collapses todos for client\n * @param {Integer} userid\n */\nconst todoCollapse = (userid) => {\n    // eslint-disable-next-line no-console\n    console.log('collapse' + userid);\n};\n\nconst switchbuttons = (target, mode, id) => {\n    let html = '';\n    if (mode == 'uncheck') {\n        html = '<button class=\"btn btn-primary-outline coodle-checkbutton pull-right\"' +\n        'data-action=\"local-coodle-todo-check\" data-id=\"' +\n        id +\n        '\"><i class=\"fa fa-check-square-o fa-2x text-success \" aria-hidden=\"true\" data-action=\"local-coodle-todo-check\" data-id=\"' +\n        id +\n        '\"></i></button>';\n    }\n    if (mode == 'check') {\n        html = '<button class=\"btn btn-primary-outline coodle-checkbutton pull-right\"' +\n        'data-action=\"local-coodle-todo-uncheck\" data-id=\"' +\n        id + '\"><i class=\"fa fa-play fa-2x text-success \" aria-hidden=\"true\" data-action=\"local-coodle-todo-uncheck\" data-id=\"' +\n        id +\n        '\"></i></button>';\n    }\n    let button = target.closest('.coodle-checkbutton');\n    button.insertAdjacentHTML(\"afterend\", html);\n    button.remove();\n};\n"],"names":["ACTIONS","SELECTORS","initEventListener","document","querySelector","addEventListener","e","target","console","log","dataset","action","todoCheck","id","linkDelete","todoUncheck","todoCollapse","todoMakeUserTodo","call","methodname","args","parseInt","done","closest","classList","add","switchbuttons","fail","ex","remove","userid","mode","html","button","insertAdjacentHTML"],"mappings":";;;;;;4IA2BMA,cACK,0BADLA,eAEM,2BAFNA,gBAGO,4BAHPA,iBAIQ,6BAJRA,qBAKY,6BAMZC,oBACS,kCAMK,KAChBC,2BAMEA,kBAAoB,KACtBC,SAASC,cAAcH,qBAAqBI,iBAAiB,SAAS,SAASC,OACvEC,OAASD,EAAEC,UAEfC,QAAQC,IAAIF,OAAOG,QAAQC,QACtBJ,OAAOG,QAAQC,cAKZJ,OAAOG,QAAQC,aACdX,cACDY,UAAUL,OAAQA,OAAOG,QAAQG,eAEhCb,eACDc,WAAWP,OAAQA,OAAOG,QAAQG,eAEjCb,gBACDe,YAAYR,OAAQA,OAAOG,QAAQG,eAElCb,iBACDgB,aAAaT,OAAQA,OAAOG,QAAQG,eAEnCb,qBACDiB,iBAAiBV,OAAQA,OAAOG,QAAQG,SAjB5CL,QAAQC,IAAI,WA8BlBG,UAAY,CAACL,OAAQM,oBAClBK,KAAK,CAAC,CACPC,WAAY,2BACZC,KAAM,QACQC,SAASR,WACT,QAEdS,KAAM,WACFf,OAAOgB,QAAQ,MAAMC,UAAUC,IAAI,QACnCC,cAAcnB,OAAQ,QAASM,KAEnCc,KAAM,SAASC,IAEXpB,QAAQC,IAAI,MAAQmB,SAU1Bd,WAAa,CAACP,OAAQM,oBACnBK,KAAK,CAAC,CACPC,WAAY,2BACZC,KAAM,IACIC,SAASR,KAEnBS,KAAM,WACFf,OAAOgB,QAAQ,MAAMM,UAEzBF,KAAM,SAASC,IAEXpB,QAAQC,IAAI,MAAQmB,SAU1BX,iBAAmB,CAACV,OAAQM,oBACzBK,KAAK,CAAC,CACPC,WAAY,2BACZC,KAAM,QACQC,SAASR,WACT,YAEdS,KAAM,WACFf,OAAOgB,QAAQ,MAAMC,UAAUC,IAAI,aAEvCE,KAAM,SAASC,IAEXpB,QAAQC,IAAI,MAAQmB,SAU1Bb,YAAc,CAACR,OAAQM,oBACpBK,KAAK,CAAC,CACPC,WAAY,2BACZC,KAAM,QACQC,SAASR,WACT,WAEdS,KAAM,WACFf,OAAOgB,QAAQ,MAAMC,UAAUK,OAAO,QACtCH,cAAcnB,OAAQ,UAAWM,KAErCc,KAAM,SAASC,IAEXpB,QAAQC,IAAI,MAAQmB,SAS1BZ,aAAgBc,SAElBtB,QAAQC,IAAI,WAAaqB,SAGvBJ,cAAgB,CAACnB,OAAQwB,KAAMlB,UAC7BmB,KAAO,GACC,WAARD,OACAC,KAAO,uHAEPnB,GACA,2HACAA,GACA,mBAEQ,SAARkB,OACAC,KAAO,yHAEPnB,GAAK,mHACLA,GACA,uBAEAoB,OAAS1B,OAAOgB,QAAQ,uBAC5BU,OAAOC,mBAAmB,WAAYF,MACtCC,OAAOJ"}